{"remainingRequest":"C:\\Users\\77521\\Desktop\\bimproject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\77521\\Desktop\\bimproject\\src\\components\\BlockGen.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\77521\\Desktop\\bimproject\\src\\components\\BlockGen.vue","mtime":1632359120268},{"path":"C:\\Users\\77521\\Desktop\\bimproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630912473157},{"path":"C:\\Users\\77521\\Desktop\\bimproject\\node_modules\\babel-loader\\lib\\index.js","mtime":1630912479809},{"path":"C:\\Users\\77521\\Desktop\\bimproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630912473157},{"path":"C:\\Users\\77521\\Desktop\\bimproject\\node_modules\\vue-loader\\lib\\index.js","mtime":1630912481059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsDQogICAgICBhbGxEYXRhOiBudWxsLA0KICAgICAgc3RhcnRWYWx1ZTogMCwNCiAgICAgIGVuZFZhbHVlOiA2LA0KICAgICAgdGltZXJJZDogbnVsbCwNCiAgICB9Ow0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaW5pdENoYXJ0KCk7DQogICAgdGhpcy5nZXREYXRhKCk7DQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMuc2NyZWVuQWRhcHRlcik7DQogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7DQogIH0sDQogIGRlc3Ryb3llZCgpIHsNCiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgdGhpcy5zY3JlZW5BZGFwdGVyKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGluaXRDaGFydCgpIHsNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmJsb2NrZ2VuX3JlZik7DQogICAgICBjb25zdCBpbml0T3B0aW9uID0gew0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6ICLkuJrliqHlubblj5Hph48iLA0KICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgY29sb3I6ICIjZmZmZmZmIiwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICBncmlkOiB7DQogICAgICAgICAgdG9wOiAiMjUlIiwNCiAgICAgICAgICBsZWZ0OiAiOCUiLA0KICAgICAgICAgIHJpZ2h0OiAiMTAlIiwNCiAgICAgICAgICBib3R0b206ICI2JSIsDQogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogImF4aXMiLA0KICAgICAgICAgIGZvcm1hdHRlcjogIuaXtiDpl7Q6IHtiMH08YnIgLz7kuJrliqHlubblj5Hph4/vvJp7YzB9IiwNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICB0eXBlOiAiY2F0ZWdvcnkiLA0KICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwNCiAgICAgICAgICAvLyDkuI3pnIDopoHlnZDmoIfovbTovbTnur8NCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgc2hvdzogZmFsc2UsDQogICAgICAgICAgfSwNCiAgICAgICAgICAvLyDlupXpg6jliLvluqbnur/nmoTorr7nva4NCiAgICAgICAgICBheGlzVGljazogew0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIGNvbG9yOiAiIzA3NTM2YSIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgIH0sDQogICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICBjb2xvcjogIiNhYWEiLA0KICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgICAgIHlBeGlzOiB7DQogICAgICAgICAgdHlwZTogInZhbHVlIiwNCiAgICAgICAgICBzcGxpdExpbmU6IHsNCiAgICAgICAgICAgIGxpbmVTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogIiMwNzUzNmEiLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9LA0KICAgICAgICAgIC8vIOiuvue9ruW3puagh+etvuaWh+Wtlw0KICAgICAgICAgIGF4aXNMYWJlbDogew0KICAgICAgICAgICAgY29sb3I6ICIjZGRkIiwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAibGluZSIsDQogICAgICAgICAgICBjb2xvcjogIiMwNWI2ZDgiLA0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIHdpZHRoOiAzLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHN5bWJvbFNpemU6IDgsDQogICAgICAgICAgICBhcmVhU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICIjMWU3MDliIiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgXSwNCiAgICAgIH07DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pOw0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCJtb3VzZW92ZXIiLCAoKSA9PiB7DQogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKTsNCiAgICAgIH0pOw0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCJtb3VzZW91dCIsICgpID0+IHsNCiAgICAgICAgdGhpcy5zdGFydEludGVydmFsKHRoaXMudGltZXJJZCk7DQogICAgICB9KTsNCiAgICB9LA0KICAgIGFzeW5jIGdldERhdGEoKSB7DQogICAgICBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoDQogICAgICAgICIvYmxvY2tHZW5lcmF0aW9uUmF0ZS9sYXRlc3QtNmhycyINCiAgICAgICk7DQogICAgICB0aGlzLmFsbERhdGEgPSByZXQucGxheWxvYWQ7DQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpOw0KICAgICAgdGhpcy51cGRhdGVDaGFydCgpOw0KICAgICAgdGhpcy5zdGFydEludGVydmFsKCk7DQogICAgfSwNCiAgICB1cGRhdGVDaGFydCgpIHsNCiAgICAgIGNvbnN0IHJhdGVWYWx1ZSA9IHRoaXMuYWxsRGF0YS5tYXAoKGl0ZW0pID0+IHsNCiAgICAgICAgcmV0dXJuIGl0ZW0ucmF0ZTsNCiAgICAgIH0pOw0KICAgICAgY29uc3QgdGltZSA9IHRoaXMuYWxsRGF0YS5tYXAoKGl0ZW0pID0+IHsNCiAgICAgICAgcmV0dXJuIGl0ZW0udGltZTsNCiAgICAgIH0pOw0KICAgICAgY29uc3QgZGF0YU9wdGlvbiA9IHsNCiAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICBkYXRhOiB0aW1lLA0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBkYXRhOiByYXRlVmFsdWUsDQogICAgICAgICAgICBhbmltYXRpb246IHRydWUsDQogICAgICAgICAgfSwNCiAgICAgICAgXSwNCiAgICAgICAgZGF0YVpvb206IHsNCiAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICBzdGFydFZhbHVlOiB0aGlzLnN0YXJ0VmFsdWUsDQogICAgICAgICAgZW5kVmFsdWU6IHRoaXMuZW5kVmFsdWUsDQogICAgICAgIH0sDQogICAgICB9Ow0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKTsNCiAgICB9LA0KICAgIHNjcmVlbkFkYXB0ZXIoKSB7DQogICAgICBjb25zdCByZWZIZWlnaHQgPSB0aGlzLiRyZWZzLmJsb2NrZ2VuX3JlZi5vZmZzZXRIZWlnaHQ7DQogICAgICBjb25zdCByZWZXaWR0aCA9IHRoaXMuJHJlZnMuYmxvY2tnZW5fcmVmLm9mZnNldFdpZHRoOw0KICAgICAgbGV0IEhXID0gWzAsIDBdOw0KICAgICAgaWYgKHJlZkhlaWdodCAvIHJlZldpZHRoID4gMjY0IC8gNDc0KSB7DQogICAgICAgIC8vIOW9k+mrmOWNoOavlOS4ujEwMCXml7YNCiAgICAgICAgSFcgPSBbMC45NSwgMS43LCAocmVmSGVpZ2h0IC8gMTAwKSAqIDcuMl07DQogICAgICB9IGVsc2Ugew0KICAgICAgICBIVyA9IFswLjksIDEuNywgKHJlZldpZHRoIC8gMTAwKSAqIDRdOw0KICAgICAgfQ0KICAgICAgY29uc3QgYWRhcHRlck9wdGlvbiA9IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgIGZvbnRTaXplOiBIV1syXSwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHRvcDogSFdbMl0gKiBIV1swXSwNCiAgICAgICAgICBsZWZ0OiBIV1syXSAqIEhXWzFdLA0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBiYXJXaWR0aDogSFdbMl0sDQogICAgICAgICAgfSwNCiAgICAgICAgXSwNCiAgICAgIH07DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGFkYXB0ZXJPcHRpb24pOw0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpOw0KICAgIH0sDQogICAgc3RhcnRJbnRlcnZhbCgpIHsNCiAgICAgIGlmICh0aGlzLnRpbWVySWQpIHsNCiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySWQpOw0KICAgICAgfQ0KICAgICAgdGhpcy50aW1lcklkID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICB0aGlzLnN0YXJ0VmFsdWUrKzsNCiAgICAgICAgdGhpcy5lbmRWYWx1ZSsrOw0KICAgICAgICBpZiAodGhpcy5lbmRWYWx1ZSA+IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxKSB7DQogICAgICAgICAgdGhpcy5zdGFydFZhbHVlID0gMDsNCiAgICAgICAgICB0aGlzLmVuZFZhbHVlID0gNjsNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7DQogICAgICB9LCAyMDAwKTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["BlockGen.vue"],"names":[],"mappingsfile":"BlockGen.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart com-chartbg\" ref=\"blockgen_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      startValue: 0,\r\n      endValue: 6,\r\n      timerId: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    this.getData();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chartInstance = this.$echarts.init(this.$refs.blockgen_ref);\r\n      const initOption = {\r\n        title: {\r\n          text: \"业务并发量\",\r\n          textStyle: {\r\n            color: \"#ffffff\",\r\n          },\r\n        },\r\n        grid: {\r\n          top: \"25%\",\r\n          left: \"8%\",\r\n          right: \"10%\",\r\n          bottom: \"6%\",\r\n          containLabel: true,\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          formatter: \"时 间: {b0}<br />业务并发量：{c0}\",\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          // 不需要坐标轴轴线\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          // 底部刻度线的设置\r\n          axisTick: {\r\n            lineStyle: {\r\n              color: \"#07536a\",\r\n            },\r\n          },\r\n          axisLabel: {\r\n            color: \"#aaa\",\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: \"#07536a\",\r\n            },\r\n          },\r\n          // 设置左标签文字\r\n          axisLabel: {\r\n            color: \"#ddd\",\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"line\",\r\n            color: \"#05b6d8\",\r\n            lineStyle: {\r\n              width: 3,\r\n            },\r\n            symbolSize: 8,\r\n            areaStyle: {\r\n              color: \"#1e709b\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(initOption);\r\n      this.chartInstance.on(\"mouseover\", () => {\r\n        clearInterval(this.timerId);\r\n      });\r\n      this.chartInstance.on(\"mouseout\", () => {\r\n        this.startInterval(this.timerId);\r\n      });\r\n    },\r\n    async getData() {\r\n      const { data: ret } = await this.$http.get(\r\n        \"/blockGenerationRate/latest-6hrs\"\r\n      );\r\n      this.allData = ret.playload;\r\n      // console.log(this.allData);\r\n      this.updateChart();\r\n      this.startInterval();\r\n    },\r\n    updateChart() {\r\n      const rateValue = this.allData.map((item) => {\r\n        return item.rate;\r\n      });\r\n      const time = this.allData.map((item) => {\r\n        return item.time;\r\n      });\r\n      const dataOption = {\r\n        xAxis: {\r\n          data: time,\r\n        },\r\n        series: [\r\n          {\r\n            data: rateValue,\r\n            animation: true,\r\n          },\r\n        ],\r\n        dataZoom: {\r\n          show: false,\r\n          startValue: this.startValue,\r\n          endValue: this.endValue,\r\n        },\r\n      };\r\n      this.chartInstance.setOption(dataOption);\r\n    },\r\n    screenAdapter() {\r\n      const refHeight = this.$refs.blockgen_ref.offsetHeight;\r\n      const refWidth = this.$refs.blockgen_ref.offsetWidth;\r\n      let HW = [0, 0];\r\n      if (refHeight / refWidth > 264 / 474) {\r\n        // 当高占比为100%时\r\n        HW = [0.95, 1.7, (refHeight / 100) * 7.2];\r\n      } else {\r\n        HW = [0.9, 1.7, (refWidth / 100) * 4];\r\n      }\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: HW[2],\r\n          },\r\n          top: HW[2] * HW[0],\r\n          left: HW[2] * HW[1],\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: HW[2],\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(adapterOption);\r\n      this.chartInstance.resize();\r\n    },\r\n    startInterval() {\r\n      if (this.timerId) {\r\n        clearInterval(this.timerId);\r\n      }\r\n      this.timerId = setInterval(() => {\r\n        this.startValue++;\r\n        this.endValue++;\r\n        if (this.endValue > this.allData.length - 1) {\r\n          this.startValue = 0;\r\n          this.endValue = 6;\r\n        }\r\n        this.updateChart();\r\n      }, 2000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}